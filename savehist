;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(prot-simple--character-hist read-char-history prot-fonts-font-display-hist counsel-imenu-history consult-imenu--history which-key-keymap-history search-ring embark--prompter-history magit-revision-history xref--read-identifier-history consult--line-history face-name-history read-number-history eglot-command-history extended-command-history grep-regexp-history counsel-describe-symbol-history query-replace-history anzu--history lsp-rename-history counsel-git-grep-history imenu--history-list cider--jack-in-cmd-history cider-host-history cider-minibuffer-history coding-system-history minibuffer-history swiper-history buffer-name-history cider--select-cljs-repl-history file-name-history ivy-history counsel-M-x-history empty-history))
(setq read-char-history '("p"))
(setq prot-fonts-font-display-hist '("desktop" "laptop"))
(setq counsel-imenu-history '(#("pp-" 0 3 (ivy-index 0)) "Variable.com.example.components.seed: new-pp-module"))
(setq consult-imenu--history '("new-account"))
(setq which-key-keymap-history '("css-menu"))
(setq search-ring '(#("monger" 0 6 (isearch-regexp-function nil isearch-case-fold-search t)) #("clojure" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("shadow" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("fulcro" 0 6 (isearch-regexp-function nil isearch-case-fold-search t)) #("syntax" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("'modus-theme" 0 12 (isearch-case-fold-search t isearch-regexp-function nil)) #("modus-theme" 0 11 (isearch-case-fold-search t isearch-regexp-function nil)) #("79a8ff" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("a0acef" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("f78fe7" 0 6 (isearch-regexp-function nil isearch-case-fold-search t)) #("f78f" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("cyan" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("mag" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("dim" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("a4d0bb" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("a0bfdf" 0 6 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq embark--prompter-history '("q   embark-kill-buffer-and-window" "L   embark-collect-live" "w   embark-save" "E   embark-export" #("RET find-file" 0 3 (face embark-keybinding embark-command find-file) 3 13 (embark-command find-file)) "RET imenu" "i   embark-insert" "RET embark-act-on-region-contents" "t   transpose-regions" "I   embark-insert-relative-path"))
(setq magit-revision-history '("main" "4ccd137" "origin/main" "9fdd54d" "8405bd0" "6522a30" "19fda0f"))
(setq eglot-command-history '("/opt/homebrew/Cellar/clojure-lsp/20210601T161944/bin/clojure-lsp" "clojure-lsp"))
(setq extended-command-history '("eshell" "ediff-hide-marked-sessions" "cider-jack-in-clj" "cider-jack-in-cljs" "cider-jack-in-clj&cljs" "customize-group" "swift-mode" "swift-mode:run-repl" "swift-repl-mode" "lsp-install-server" "lsp" "tear-off-window" "package-install" "bookmark-set" "cider-connect-clj&cljs" "cider-connect-clj" "cider-connect-cljs" "lsp-format-buffer" "clojure-mode" "cider-format-buffer" "org-mode" "desktop-clear" "comment-dwim" "paredit-comment-dwim" "customize" "server-force-delete" "flycheck-mode" "cider-restart" "package-delete" "eglot-shutdown-all" "eglot" "lsp-disconnect" "cider-clojuredocs" "global-eldoc-mode" "lsp-ui-sideline-mode" "lsp-ui-doc-mode" "lsp-ui-doc-hide" "lsp-restart-workspace" "js2-mode" "kill-line" "company-mode" "enable-paredit-mode" "turn-on-smartparens-strict-mode" "lva/lsp-ui-toggle-doc" "eval-region" "lsp-ui-doc-show" "emacs-lisp-mode" "cider" "flymake-mode" "lsp-signature-toggle-full-docs" "lsp-signature-activate" "lsp-signature-mode" "lsp-ui-mode" "cider-quit" "customize-variable" "lsp-ui-doc-frame-mode" "eglot-reconnect" "revert-buffer" "magit-stash" "magit" "my-indent-region" "elisp-guide-mode" "print-upper-region" "counsel-imenu" "modus-themes-toggle" "eglot-find-implementation" "eglot-find-declaration" "comment-region" "lsp-doctor" "lsp-diagnose" "lsp-modeline-diagnostics-mode" "consult-imenu" "imenu" "which-key-mode" "embark-bindings" "which-key-show-keymap" "desktop-save" "desktop-read" "desktop-revert" "desktop-change-dir" "describe-key" "magit-checkout" "magit-log" "paredit-mode" "turn-off-smartparens-mode" "sp-cheat-sheet" "sp-forward-slurp-sexp" "sp-use-smartparens-bindings" "highlight-indent-guides-mode" "lisp-mode" "lsp-org" "smartparens-global-mode" "smartparens-strict-mode" "smartparens-mode" "hl-line-mode" "eval-buffer" "display-line-numbers-mode" "package-list-packages" "lsp-mode" "eglot-shutdown" "list-packages" "menu-bar-mode" "make-frame" "make-face" "clojurec-mode" "eldoc-print-current-symbol-info" "line-number-mode" "global-flycheck-mode" "customize-group-other-window" "customize-themes" "avy-isearch"))
(setq grep-regexp-history '("post" "postmail" "mail" "\"The form has errors" ":string" "disabled?" "diabled?" "read-only?" ":type" ":button" "current-rows" ":ui" "comp/transact!" "operator/register" "\"realm-web\"" "[\"realm-web\" :as realm]" "lsp-ui-sideline" "lsp-sideline" "login" "action-buttons" "controls" "fo/controls" "field-options" "field-style" "ASSOC-IN" "modus-theme" "modus-theme-syntax" "read-only" "read-only-fields" "mount"))
(setq counsel-describe-symbol-history '(#("^ivy-yan" 0 8 (ivy-index 0)) "ivy-yank-word" #("^" 0 1 (ivy-index 2168)) "modus-themes-syntax" "company-idle-delay"))
(setq query-replace-history '("operator" "account" "2" "1" "pp-module" "item" "pricing-plan" "address" "" "" "" "" "\\website\\" "website" "website" "operator/id" "account/id" "Management" "AccountList" "Management" "AccountForm"))
(setq lsp-rename-history '("website" "Management"))
(setq counsel-git-grep-history '(#("rewrite" 0 7 (ivy-index 0))))
(setq imenu--history-list '("new-category" "new-address" #("app.model.session" 0 17 (idx 0 ivy-index 0)) #("adapt-v-in" 0 10 (ivy-index 5 idx 5)) #("konserve-monger.core" 0 20 (ivy-index 0 idx 0))))
(setq cider--jack-in-cmd-history '("/opt/homebrew/bin/clojure -A:dev:datomic -Sdeps '{:deps {nrepl/nrepl {:mvn/version \"0.8.3\"} cider/piggieback {:mvn/version \"0.5.2\"} refactor-nrepl {:mvn/version \"2.5.1\"} cider/cider-nrepl {:mvn/version \"0.25.9\"}} :aliases {:cider/nrepl {:main-opts [\"-m\" \"nrepl.cmdline\" \"--middleware\" \"[shadow.cljs.devtools.server.nrepl/middleware,refactor-nrepl.middleware/wrap-refactor,cider.nrepl/cider-middleware,cider.piggieback/wrap-cljs-repl]\"]}}}' -M:cider/nrepl" "/opt/homebrew/bin/clojure -A:dev:datomic -Sdeps '{:deps {nrepl/nrepl {:mvn/version \"0.8.3\"} refactor-nrepl {:mvn/version \"2.5.1\"} cider/cider-nrepl {:mvn/version \"0.25.9\"}} :aliases {:cider/nrepl {:main-opts [\"-m\" \"nrepl.cmdline\" \"--middleware\" \"[shadow.cljs.devtools.server.nrepl/middleware,refactor-nrepl.middleware/wrap-refactor,cider.nrepl/cider-middleware]\"]}}}' -M:cider/nrepl" "/opt/homebrew/bin/clojure -A:dev -Sdeps '{:deps {nrepl/nrepl {:mvn/version \"0.8.3\"} refactor-nrepl {:mvn/version \"2.5.1\"} cider/cider-nrepl {:mvn/version \"0.25.9\"}} :aliases {:cider/nrepl {:main-opts [\"-m\" \"nrepl.cmdline\" \"--middleware\" \"[shadow.cljs.devtools.server.nrepl/middleware,refactor-nrepl.middleware/wrap-refactor,cider.nrepl/cider-middleware]\"]}}}' -M:cider/nrepl" "/opt/homebrew/bin/clojure -A:dev:datomic -Sdeps '{:deps {nrepl/nrepl {:mvn/version \"0.8.3\"} refactor-nrepl {:mvn/version \"2.5.1\"} cider/cider-nrepl {:mvn/version \"0.25.9\"}} :aliases {:cider/nrepl {:main-opts [\"-m\" \"nrepl.cmdline\" \"--middleware\" \"[shadow.cljs.devtools.server.nrepl/middleware,refactor-nrepl.middleware/wrap-refactor,cider.nrepl/cider-middleware]\"]}}}' -M:cider/nrepl"))
(setq cider-host-history '("Sifous-MacBook-Pro.local" #("localhost" 0 9 (ivy-index 0 idx 0))))
(setq cider-minibuffer-history '("select-keys" "PricingPlanForm"))
(setq coding-system-history '(#("unix" 0 4 (idx 916 ivy-index 228))))
(setq minibuffer-history '("deps.edn" "~/Projects/Other/kv-rad/" "a" "clojure-cli" "~/Projects/Knowbie/iOS/" "Podfile" "modus-themes" "Knowbie/Views/Module/Quiz/WrappingHStack.swift" "Knowbie/Helpers/TestView.swift" "Knowbie/Seed/SampleData.swift" "modus-themes.el" "kv-rad:57545" "kv-rad:61817" "src/demo-project/com/example/components/parser.clj" "kv-rad:54514" "src/demo-project/com/example/ui/management_forms.cljc" "src/demo-project/com/example/client.cljs" "line-spacing" "form.cljc" "lsp-lens" "src/demo-project/com/example/model/account.cljc" "src/demo-project/com/example/ui/account_forms.cljc" "src/demo-project/com/example/model/sales.cljc" "src/demo-project/com/example/model/operator.cljc" "src/demo-project/com/example/ui/login_dialog.cljc" "17" "300" ".dir-locals.el" ":main" "lsp-ui-20210604.1158" "lsp-clojure" "cider" "display-doc" "select-keys" "107" "290" "kv-rad:54456" "src/main/com/fulcrologic/rad/database_adapters/key_value.cljc" "src/konserve_monger/core.clj" "~/Projects/Other/konserve-monger/" "src/demo-project/config/defaults.edn" "src/demo-project/com/example/components/seed.cljc" ";;" "kv-rad:51807" "src/demo-project/com/example/ui.cljs" "match-end" "add-text-properties" "replace-match" "Sifou" "sdf" "lsp-ui" "lsp-ui-doc-header" "kv-rad:60390" "cider-connect-clj" "lsp-diagnostics-provider" "lsp-signature-render-documentation" "lsp-eldoc-function" "lsp-signature" "lsp-signature-mode" "On (no branch): " "On main: " "alist-get" "modus-themes-syntax" "eglot" "27" "src/demo-project/com/example/model/pricing_plan.cljc" "src/demo-project/com/example/ui/invoice_forms.cljc" "src/demo-project/com/example/ui/line_item_forms.cljc" "src/demo-project/com/example/model/invoice.cljc" "src/demo-project/com/example/model/line_item.cljc" "src/demo-project/com/example/ui/pricing_plan_forms.cljc" "109" "eglot-find-implementation" "eglot-find-declaration" "kv-rad:52269" "cider-repl-mode-hook" "prog-mode-hook" "clojurescript-mode-hook" "~/.emacs.d/" "lisp-extra-font-lock" "prot-emacs.org" "kv-rad:55337" "src/demo-project/com/example/model/pp_module.cljc" "165" "58" "39" "~/Projects/Other/fulcro-rad-kvstore/" "src/sql/com/example/components/parser.clj" "~/Projects/Other/fulcro-rad-demo/" "clojure-mode-extra-font-locking" "40" "33" "src/datomic/com/example/model/seed.clj" "src/crux/com/example/model/seed.clj" "src/play/play/konserve/queries.clj" "clojure-lsp" "lsp-mode-20210601.1642" "*cider-repl Other/kv-rad:localhost:50216(clj)*" "kv-rad:55068" "src/demo-project/com/example/ui/pp_module_forms.cljc" "src/shared/com/example/ui/invoice_forms.cljc" "src/shared/config/defaults.edn" "src/shared/com/example/model/invoice.cljc" "elpa/treemacs-20210223.1802/icons/default/c.png" "src/shared/com/example/model/account.cljc" "highlight-indent-guides" "src/play/play/com/example/components/parser.clj" "~/Projects/Knowbie/Admin/" "alter-existing-user" "save-form!" "account.role" "AccountForm" "password" "phone" "projectile-switch-project-action" "logout" "::logout" "337" "217" "201" "zenburn" "account/primary-address" "subforms" "make-validator" "create!" "45" "all-controls" "save-middleware" "::save-middleware" "/:ref/" ":ref" "31"))
(setq swiper-history '("themess" ".el" "pro-" #("project-x" 0 9 (ivy-index 0)) "autocom" "highlighting" "ighting" "ighting" #("yank" 0 4 (ivy-index 0)) "global-display" "dired" "dired" "dired" "role" "role" #("role" 0 4 (ivy-index 0)) #("math" 0 4 (ivy-index 0)) "field-" "ro" "nsro" "field" "~/.emacs.d/workspace/.cache/com.fulcrologic.rad.authorization.cljcfie" #("enum" 0 4 (ivy-index 2)) "payment-frequencies" "synta" #("PricingPlanForm" 0 15 (ivy-index 0)) #("AddressForm" 0 11 (ivy-index 0)) "cljs" "re" #("synta" 0 5 (ivy-index 0)) #("pay" 0 3 (ivy-index 0)) "fo/route-prefixpay" ":com.fulcrologic.rad.database-adapters.sql/column-namechange" #("adm" 0 3 (ivy-index 0)) #("many" 0 4 (ivy-index 0)) "may" #("ref" 0 3 (ivy-index 4)) #("payment-frequency" 0 17 (ivy-index 3)) "address" "Admin" #("label" 0 5 (ivy-index 5)) #("bool" 0 4 (ivy-index 0)) #("website" 0 7 (ivy-index 2)) "global-set-key" #("websi" 0 5 (ivy-index 0)) #("passwo" 0 6 (ivy-index 8)) #("initial-pas" 0 11 (ivy-index 0)) "acc" "apply" #("high" 0 4 (ivy-index 0)) "selec" "match" #("font" 0 4 (ivy-index 1)) #(" ;(set-face-attribute 'default nil :font \"SF Mono2\")" 0 1 (swiper-line-number 481 display "481 ") 1 2 (fontified t face font-lock-comment-delimiter-face) 2 52 (fontified t face font-lock-comment-face)) #("ont" 0 3 (ivy-index 4)) "custom-set-variablesfont" "custom-set-variablesfont" "global-display-line-numbers-modefont" "match" "mark" #("paren" 0 5 (ivy-index 1)) "match" #("match" 0 5 (ivy-index 0)) "syntax" #("curso" 0 5 (ivy-index 0)) "custom-set-variablescurs" #("line" 0 4 (ivy-index 8)) "mode" #("numb" 0 4 (ivy-index 0)) #("syn" 0 3 (ivy-index 2)) "setq-defaultline" #("secure-resolver" 0 15 (ivy-index 0)) "secure-resolver})" "automatic-resolvers" "kv-pathom/pathom-plugingene" "spaci" #("synt" 0 4 (ivy-index 0)) "Forsyn" #("hl-" 0 3 (ivy-index 0)) "word" #("active" 0 6 (ivy-index 6)) #("highligh" 0 8 (ivy-index 3)) "zone-iddefa" #("paym" 0 4 (ivy-index 5)) #("paymen" 0 6 (ivy-index 6)) #("repl" 0 4 (ivy-index 2)) #("delay" 0 5 (ivy-index 1)) "1auto" "dms" "Moretime" #("auto" 0 4 (ivy-index 4)) "form/defsc-formrole" "defattrpaye" #(":account.role" 0 13 (ivy-index 0)) "payement" "paye" ":account.role/superuseracc" #("clj" 0 3 (ivy-index 7)) #("name" 0 4 (ivy-index 6)) "generated-password?" "generated-password?p" #("courses-access" 0 14 (ivy-index 3)) "access" #("addresses" 0 9 (ivy-index 1)) ":operator/courses-accessref" ":operator/courses-accessref" "password" #("passwor" 0 7 (ivy-index 1)) "ui-main-router" "ui-main-router" "(ui-main-router router" "rout" "authe" "bu" "cur" #("hl" 0 2 (ivy-index 0)) #(" Show Value Modus Themes Hl Line " 0 1 (swiper-line-number 155 display "155 ") 1 11 (display (image :type xpm :file "/Applications/Emacs.app/Contents/Resources/etc/images/custom/right.xpm" :ascent center) rear-nonsticky t keymap (keymap (111 . image-save) (114 . image-rotate) (C-mouse-4 . image-mouse-increase-size) (C-wheel-up . image-mouse-increase-size) (C-mouse-5 . image-mouse-decrease-size) (C-wheel-down . image-mouse-decrease-size) (43 . image-increase-size) (45 . image-decrease-size)))) #("AccountListItem" 0 15 (ivy-index 0)) #(" (defsc AccountListItem [this" 0 1 (swiper-line-number 74 display "74  ") 1 2 (help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-1-face) fontified t) 2 7 (help-echo cider--help-echo cider-locals nil face font-lock-keyword-face fontified t) 7 8 (help-echo cider--help-echo cider-locals ("row-class" "report-instance" "props" "active?" "name" "id" "this") fontified t) 8 9 (help-echo cider--help-echo cider-locals ("row-class" "report-instance" "props" "active?" "name" "id" "this") face font-lock-function-name-face fontified t) 9 10 (help-echo cider--help-echo cider-locals ("row-class" "report-instance" "props" "active?" "name" "id" "this") face font-lock-function-name-face fontified t) 10 11 (help-echo cider--help-echo cider-locals ("row-class" "report-instance" "props" "active?" "name" "id" "this") face font-lock-function-name-face fontified t) 11 12 (help-echo cider--help-echo cider-locals ("row-class" "report-instance" "props" "active?" "name" "id" "this") face font-lock-function-name-face fontified t) 12 13 (help-echo cider--help-echo cider-locals ("row-class" "report-instance" "props" "active?" "name" "id" "this") face font-lock-function-name-face fontified t) 13 14 (help-echo cider--help-echo cider-locals ("row-class" "report-instance" "props" "active?" "name" "id" "this") face font-lock-function-name-face fontified t) 14 15 (help-echo cider--help-echo cider-locals ("row-class" "report-instance" "props" "active?" "name" "id" "this") face font-lock-function-name-face fontified t) 15 23 (help-echo cider--help-echo cider-locals ("row-class" "report-instance" "props" "active?" "name" "id" "this") face font-lock-function-name-face fontified t) 23 24 (help-echo cider--help-echo cider-locals ("row-class" "report-instance" "props" "active?" "name" "id" "this") fontified t) 24 25 (help-echo cider--help-echo cider-locals ("row-class" "report-instance" "props" "active?" "name" "id" "this") face (rainbow-delimiters-depth-2-face) fontified t) 25 29 (help-echo cider--help-echo cider-locals ("row-class" "report-instance" "props" "active?" "name" "id" "this") fontified t)) "ManagementListItem" "Management-Row" "                                                                                                           :account/active? false})])))" "Account" #("Manag" 0 5 (ivy-index 1)) #("AccountForm" 0 11 (ivy-index 0)) #(" (form/defsc-form AccountForm [this props]" 0 1 (swiper-line-number 38 display "38  ") 1 2 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-1-face)) 2 6 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 6 7 (fontified t help-echo cider--help-echo cider-locals nil) 7 17 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-keyword-face) 17 18 (fontified t help-echo cider--help-echo cider-locals nil) 18 29 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-function-name-face) 29 30 (fontified t help-echo cider--help-echo cider-locals nil) 30 31 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face)) 31 41 (fontified t help-echo cider--help-echo cider-locals nil) 41 42 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face))) #("Manage" 0 6 (ivy-index 0)) "exp" "exp" "expo" #("get-avai" 0 8 (ivy-index 0)) #(" (>def ::zone-name (set (cljc.java-time.zone-id/get-available-zone-ids)))" 0 1 (swiper-line-number 55 display "55  ") 1 2 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-1-face)) 2 7 (fontified t help-echo cider--help-echo cider-locals nil) 7 9 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 9 18 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 18 19 (fontified t help-echo cider--help-echo cider-locals nil) 19 20 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face)) 20 24 (fontified t help-echo cider--help-echo cider-locals nil) 24 25 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 25 47 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 47 70 (fontified t help-echo cider--help-echo cider-locals nil) 70 71 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 71 72 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face)) 72 73 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-1-face))) #("get-" 0 4 (ivy-index 0)) #(" (>def ::zone-name (set (cljc.java-time.zone-id/get-available-zone-ids)))" 0 1 (swiper-line-number 55 display "55  ") 1 2 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-1-face)) 2 7 (fontified t help-echo cider--help-echo cider-locals nil) 7 9 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 9 18 (fontified t help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 18 19 (fontified t help-echo cider--help-echo cider-locals nil) 19 20 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face)) 20 24 (fontified t help-echo cider--help-echo cider-locals nil) 24 25 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 25 47 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-type-face) 47 70 (fontified t help-echo cider--help-echo cider-locals nil) 70 71 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-3-face)) 71 72 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-2-face)) 72 73 (fontified t help-echo cider--help-echo cider-locals nil face (rainbow-delimiters-depth-1-face))) "get-time" #("time" 0 4 (ivy-index 0)) #("zone/" 0 5 (ivy-index 0)) #("toggle" 0 6 (ivy-index 0)) #("dired" 0 5 (ivy-index 0)) #(" (setq projectile-switch-project-action #'projectile-dired)" 0 1 (swiper-line-number 176 display "176 ") 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 6 (fontified t face font-lock-keyword-face) 6 58 (fontified t) 58 59 (fontified t face (rainbow-delimiters-depth-1-face))) #(" (setq projectile-switch-project-action #'projectile-dired)" 0 1 (swiper-line-number 176 display "176 ") 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 40 (fontified t) 40 57 (fontified t) 57 58 (fontified t rear-nonsticky t) 58 59 (fontified t face (rainbow-delimiters-depth-1-face))) #("projec" 0 6 (ivy-index 5)) #(" (setq projectile-switch-project-action #'projectile-dired)" 0 1 (swiper-line-number 176 display "176 ") 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 40 (fontified t) 40 57 (fontified t) 57 58 (fontified t rear-nonsticky t) 58 59 (fontified t face (rainbow-delimiters-depth-1-face))) #("project" 0 7 (ivy-index 2)) #(" ;; projectile" 0 1 (swiper-line-number 148 display "148 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 14 (fontified t face font-lock-comment-face)) #("prom" 0 4 (ivy-index 0)) "login" #("login" 0 5 (ivy-index 6)) #(" (defsc LoginForm [this {:keys [account/email account/password  error] :as login-form}]" 0 1 (swiper-line-number 249 display "249 ") 1 2 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal") face (rainbow-delimiters-depth-1-face)) 2 7 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal") face font-lock-keyword-face) 7 8 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this")) 8 17 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this") face font-lock-function-name-face) 17 18 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this")) 18 19 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this") face (rainbow-delimiters-depth-2-face)) 19 24 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this")) 24 25 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this") face (rainbow-delimiters-depth-3-face)) 25 26 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this") face clojure-keyword-face) 26 30 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this") face clojure-keyword-face) 30 31 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this")) 31 32 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this") face (rainbow-delimiters-depth-4-face)) 32 39 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this") face font-lock-type-face) 39 46 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this")) 46 53 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this") face font-lock-type-face) 53 69 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this")) 69 70 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this") face (rainbow-delimiters-depth-4-face)) 70 71 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this")) 71 72 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this") face clojure-keyword-face) 72 74 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this") face clojure-keyword-face) 74 85 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this")) 85 86 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this") face (rainbow-delimiters-depth-3-face)) 86 87 (help-echo cider--help-echo fontified t cider-locals ("props" "this" "this" "new-operator" "new-operator?" "this" "toggle-modal" "login-form" "error" "account/password" "account/email" "this") face (rainbow-delimiters-depth-2-face)))))
(setq buffer-name-history '("*Local Variables*" ".emacs.d/.gitignore" "deps.edn" "*cider-repl Other/kv-rad:localhost:50399(clj)*" "sifou-notes 2.edn" "*Messages*" ".dir-locals.el" "kv-rad" "WrappingHStack.swift" "prot-emacs.org" "modus-themes.el" "TestView.swift" "*scratch*" "temp.swift" "dev.org" "RChat-iOS/Podfile" "Module.swift" "ContentView.swift" "AchievementBar.swift" "management_forms.cljc" "*lsp-log*" "form.cljc" "*cider-repl Other/kv-rad:Sifous-MacBook-Pro.local:57545#3(clj)*" "operator.cljc" "*cider-repl Other/kv-rad:localhost:54514(clj)*" "*cider-repl Other/kv-rad:Sifous-MacBook-Pro.local:61817(cljs:custom)*" "ui.cljc" "*Ibuffer*" "com.fulcrologic.rad.control.cljc" "semantic_ui_controls.cljc" "model" "ui.cljs" "client.cljs" "custom.el" "form_options.cljc" "semantic_ui_options.cljc" "semantic_ui/form.cljc" "control.cljc" "account_forms.cljc" "*Customize Group: Emacs*" "sales_report.cljc" "sales.cljc" "login_dialog.cljc" "*Warnings*" "*cider-repl Other/kv-rad:localhost:55810(clj)*" "*cider-repl Other/kv-rad:localhost:55810(cljs:custom)*" "*cider-repl Other/kv-rad:localhost:61545(clj)*" "*cider-repl Other/kv-rad:localhost:61545(clj)*<2>" "*Customize Group: Cider*" "*Customize Group: Lsp Clojure*" "*Customize Group: Language Server (lsp-mode)*" "*cider-repl Other/kv-rad:localhost:56231(cljs:custom)*" "*cider-doc*" "#management_forms.cljc#" "realm.js" "konserve.cljc" "defaults.edn" "core.clj" "*xref*" "*cider-repl Other/kv-rad:localhost:51807(clj)*" "*cider-repl Other/kv-rad:localhost:51807#2(cljs:custom)*" "*test*" "pathom.cljc" "*cider-repl Other/kv-rad:localhost:60390(clj)*" "*cider-repl Other/kv-rad:localhost:60390(clj)*<2>" "config.edn" "clojure.core.clj" "components.cljc" "authorization.cljc" "report.cljc" "write.cljc" "prot-fonts.el" "init.el" "parser.clj" "*cider-repl Other/kv-rad:localhost:52804(clj)*" "seed.cljc" "line_item_forms.cljc" "pricing_plan_forms.cljc" "pricing_plan.cljc" "pp_module_forms.cljc" "line_item.cljc" "invoice.cljc" "*cider-repl Other/kv-rad:localhost:52804(cljs:custom)*" "calendar.el.gz" "*cider-repl Other/kv-rad:localhost:52421(clj)*" "*Completions*" "prot-emacs.el" "delete_middleware.clj" ".gitconfig" "*Help*" "pp_module.cljc" "*cider-repl Other/kv-rad:localhost:55337(clj)*" "COMMIT_EDITMSG" "kv-rad/defaults.edn" "account.cljc" "*cider-repl Other/fulcro-rad-kvstore:localhost:61506(clj)*" "*cider-repl Other/fulcro-rad-kvstore:localhost:61506(cljs:custom)*" "*cider-repl Other/fulcro-rad-kvstore:localhost:61135(clj)*" "*cider-repl Other/fulcro-rad-kvstore:localhost:61135(cljs:custom)*" "com.fulcrologic.rad.form.cljc" "personal/init.el" "*Customize Group: Modus Themes*" "*EGLOT (namespace/clojure-mode) events*" "fulcro-rad-1.0.8.jar::com/form.cljc" "core.cljc" "konserve-0.5.1.jar::konserve" "queries.cljc" "development.clj" "fulcro-rad-kvstore/seed.cljc" ".emacs.d/custom.el" "*cider-repl Other/kv-rad:localhost:50216(cljs:custom)*" "invoice_forms.cljc" "faces.el.gz" "c.png" "*cider-repl Other/kv-rad:localhost:49451(cljs:custom)*" ".emacs.d/init.el" "play/parser.clj" "highlight-indent-guides.el" "*Customize Group: Highlight Indent Guides*" "key_value.cljc" ".emacs.d-modus" #("application.cljs" 0 16 (ivy-index 1)) #("util.cljc" 0 9 (ivy-index 1)) #("main" 0 4 (ivy-index 2)) #("model/pricing_plan_forms.cljc" 0 29 (ivy-index 0)) #("pricing_plan_form.cljc" 0 22 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:49525(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Knowbie/Admin:localhost:49690(clj)*" 0 47 (ivy-index 0)) #("user.clj" 0 8 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:49489(cljs:custom)*" 0 54 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:49940(clj)*" 0 46 (ivy-index 0)) #("*nrepl-server Other/kv-rad:localhost*" 0 37 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:49923(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:49489(clj)*" 0 46 (ivy-index 0)) #("fulcro-rad-demo" 0 15 (ivy-index 0)) #("*cider-repl Other/fulcro-rad-demo:localhost:49737(cljs:custom)*" 0 63 (ivy-index 0)) #("*cider-repl Other/fulcro-rad-demo:localhost:49767(clj)*" 0 55 (ivy-index 0)) #("*cider-repl Other/fulcro-rad-demo:localhost:49737(clj)*" 0 55 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:60339(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:58916#2(cljs:custom)*" 0 25 (ivy-index 0) 25 34 (ivy-index 0 idx 0) 34 56 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:54983(clj)*<2>" 0 49 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:58916(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:58782(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:57787(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:54095(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:54983(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:54095#3(clj)*" 0 25 (ivy-index 0) 25 34 (idx 0 ivy-index 0) 34 48 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:53895(clj)*" 0 46 (ivy-index 0)) #("*cider-result*" 0 14 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:53622(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:49656(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:64697(clj)*<2>" 0 49 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:64396(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:64791#2(clj)*" 0 25 (ivy-index 0) 25 34 (ivy-index 0 idx 0) 34 48 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:64791#3(clj)*" 0 25 (ivy-index 0) 25 34 (idx 0 ivy-index 0) 34 48 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:50922(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:49446(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:64697(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/fulcro-rad-demo:localhost:52220(clj)*" 0 55 (ivy-index 0)) #("*cider-repl Other/fulcro-rad-demo:localhost:52060(clj)*" 0 55 (ivy-index 0)) #("*cider-repl Other/fulcro-rad-demo:localhost:51502(clj)*" 0 55 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:61999(clj)*" 0 46 (ivy-index 0)) #("*cider-repl workspace/.cache:localhost:63852(clj)*" 0 50 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:65111#2(clj)*" 0 25 (ivy-index 0) 25 34 (idx 0 ivy-index 0) 34 48 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:65111(clj)*" 0 46 (ivy-index 0)) #(":~/.emacs.d/" 0 12 (ivy-index 79)) #("kv-rad/deps.edn" 0 15 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:64936(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Knowbie/Admin:localhost:58172(clj)*" 0 47 (ivy-index 0)) #("*cider-repl Knowbie/Admin:localhost:55845(clj)*" 0 47 (ivy-index 0)) #("*cider-repl Knowbie/Admin:localhost:50401(clj)*" 0 47 (ivy-index 0)) #("*cider-repl Knowbie/Admin:localhost:54301(cljs:custom)*" 0 55 (ivy-index 0)) #("*cider-repl Knowbie/Admin:localhost:55845#2(clj)*" 0 26 (ivy-index 0) 26 35 (idx 0 ivy-index 0) 35 49 (ivy-index 0)) #("*cider-repl Knowbie/Admin:localhost:55032(clj)*" 0 47 (ivy-index 0)) #("*cider-repl Knowbie/Admin:localhost:54010(clj)*" 0 47 (ivy-index 0)) #("root.cljs" 0 9 (ivy-index 0)) #("*cider-repl Knowbie/Admin:localhost:53364(clj)*" 0 47 (ivy-index 0)) #("Admin/deps.edn" 0 14 (face ivy-current-match ivy-index 0)) #("*cider-repl Knowbie/Admin:localhost:50356(clj)*" 0 47 (ivy-index 0)) #("*cider-repl Knowbie/Admin:localhost:50356(clj)*<2>" 0 50 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:53371(clj)*" 0 46 (ivy-index 0)) #("*cider-repl-history*" 0 20 (ivy-index 0)) #("*cider-repl Other/konserve-monger:localhost:51420(clj)*" 0 55 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:49751(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:49638(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:49275(cljs:custom)*" 0 54 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:49275(clj)*" 0 46 (ivy-index 0)) #("*cider-repl Other/fulcro-rad-demo:localhost:63996(clj)*" 0 55 (ivy-index 0)) #("*cider-repl Other/fulcro-rad-demo:localhost:63833(clj)*" 0 55 (ivy-index 0)) #("*cider-repl Other/fulcro-rad-demo:localhost:63682(clj)*" 0 55 (ivy-index 0)) #("*cider-repl Other/fulcro-rad-demo:localhost:56977(clj)*" 0 55 (ivy-index 0)) #("*cider-repl Other/fulcro-rad-demo:localhost:56977(clj)*<2>" 0 58 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:60291#3(cljs:custom)*" 0 25 (ivy-index 0) 25 34 (ivy-index 0 idx 0) 34 56 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:60291#3(clj)*" 0 25 (ivy-index 0) 25 34 (ivy-index 0 idx 0) 34 48 (ivy-index 0)) #("fulcro-rad-kvstore-redis.iml" 0 28 (ivy-index 0)) #("save_middleware.clj" 0 19 (ivy-index 0)) #("com.fulcrologic.rad.middleware.save_middleware.cljc" 0 51 (ivy-index 0)) #("*cider-repl /:localhost:60280(clj)*" 0 35 (ivy-index 0)) #("*cider-repl Other/kv-rad:localhost:49730(clj)*" 0 46 (ivy-index 0))))
(setq cider--select-cljs-repl-history '(#("shadow-select" 0 13 (ivy-index 8)) #("shadow" 0 6 (ivy-index 0))))
(setq file-name-history '("~/.emacs.d/.gitignore" "~/Projects/Other/kv-rad/.gitignore" "~/Projects/Other/kv-rad/.dir-locals.el" "~/Projects/Other/kv-rad/deps.edn" "~/Projects/Other/kv-rad/" "~/Users/sb/Projects/Other/kv-rad/hs_err_pid17019.log" "~/temp.swift" "/Users/sb/Projects/Knowbie/iOS/Podfile" "/Users/sb/Projects/Other/RChat/RChat-iOS/Podfile" "~/Projects/Knowbie/iOS/" "~/Projects/Knowbie/iOS/Knowbie/Helpers/SampleData.swift" "~/Projects/Knowbie/iOS/Podfile" "~/Projects/Knowbie/iOS/Pods/../" "~/Projects/Knowbie/iOS/dev.org" "~/Projects/Knowbie/" "~/Projects/Knowbie/iOS/Knowbie/ContentView.swift" "~/Projects/Knowbie/iOS/Knowbie/Views/Home/AchievementBar.swift" "~/.emacs.d/modus-themes/modus-themes.el" "~/.emacs.d/modus-themes/modus-vivendi-theme.el" "~/Projects/Knowbie/iOS/Knowbie/Model/Module.swift" "~/.emacs.d/prot-emacs.org" "~/Projects/Other/kv-rad/src/demo-project/com/example/model/ui.cljc" "~/Projects/Other/kv-rad/src/demo-project/com/example/ui/" "~/.emacs.d/custom.el" "~/.gitlibs/libs/com.fulcrologic/fulcro-rad/d30b318c75b2938555ff12d617b62c21ba041957/src/main/com/fulcrologic/rad/control.cljc" "~/Desktop/realm.js" "~/Projects/Other/kv-rad/src/main/com/fulcrologic/rad/." "~/Desktop/learn-emacs-lisp.el" "~/Projects/Other/kv-rad/src/demo-project/com/example/components/parser.clj" "~/.config/clj-kondo/config.edn" "~/Projects/Other/kv-rad/src/demo-project/com/example/" "~/.emacs.d/prot-emacs.el" "~/.emacs.d/init.el" "~/Projects/Other/kv-rad/src/demo-project/com/example/components/seed.cljc" "~/Projects/Other/kv-rad/src/demo-project/com/example/components/delete_middleware.clj" "~/.emacs.d/CONTRIBUTING.md" "~/.emacs.d/.cache/" "~/.emacs.d/README.md" "~/.emacs.d/" "~/.gitconfig" "~/.emacs.d/desktop" "~/.emacs.d/init.el" "~/.emacs.d/org-clock-save.el" "~/Desktop/EmailValidator.swift" "~/Desktop/" "~/.emacs.d/ " "~/Desktop/personal/init.el" "~/Projects/Other/fulcro-rad-kvstore/src/demo-project/com/example/" "~/.m2/repository/io/replikativ/konserve/0.5.1/konserve-0.5.1.jar::konserve/" "~/Projects/Other/fulcro-rad-kvstore/src/demo-project/com/example/components/" "~/Projects/Other/fulcro-rad-demo/src/datomic/com/" "~/Projects/Other/fulcro-rad-demo/src/crux/com/example/model/" "~/" "~/.emacs.d/personal/init.el"))
(setq ivy-history '(#("~/Projects/Knowbie/Admin/" 0 25 (ivy-index 0)) #(".emacs.d-modus/init.el" 0 22 (ivy-index 2)) #(".emacs.d/early-init.el" 0 22 (ivy-index 2)) #(".emacs.d/init.el" 0 16 (ivy-index 1)) #("deps.edn" 0 8 (ivy-index 1)) #("~/Projects/Other/kv-rad/" 0 24 (ivy-index 1)) #("init" 0 4 (ivy-index 0)) "init.el" #("org" 0 3 (ivy-index 0)) "prot-emacs.org" #("util.cljc" 0 9 (ivy-index 1)) #("init.el" 0 7 (ivy-index 8)) #("Admin" 0 5 (ivy-index 0)) #("... (choose a dir)" 0 18 (ivy-index 1)) #("prot-emacs.org" 0 14 (ivy-index 1)) #("ivy" 0 3 (ivy-index 1)) #("pricing_plan_forms.cljc" 0 23 (ivy-index 3 face ivy-virtual)) #("client" 0 6 (ivy-index 0)) "src/demo-project/com/example/client.cljs" #("acc" 0 3 (ivy-index 1)) "account_forms.cljc" #("ac" 0 2 (ivy-index 0)) "account.cljc" #("pricing_plan.cljc" 0 17 (ivy-index 1)) #("invoice.cljc" 0 12 (ivy-index 1)) #("inv" 0 3 (ivy-index 0)) "account.cljc" #("pric" 0 4 (ivy-index 1)) "account.cljc" #("form" 0 4 (ivy-index 0)) "management_forms.cljc" #("for" 0 3 (ivy-index 2)) "account_forms.cljc" "management_forms.cljc" #("operator.cljc" 0 13 (ivy-index 1)) #("ope" 0 3 (ivy-index 0)) #("forms" 0 5 (ivy-index 2)) "account_forms.cljc" #("management_forms.cljc" 0 21 (ivy-index 2)) #("config.edn" 0 10 (ivy-index 2)) #("com.fulcrologic.rad.attributes.cljc" 0 35 (ivy-index 1)) #("confi" 0 5 (ivy-index 0)) #("man" 0 3 (ivy-index 0)) #("clj" 0 3 (ivy-index 2)) "*cider-repl Other/fulcro-rad-demo:localhost:50438(clj)*" #("clojure-cli" 0 11 (ivy-index 0)) #("~/Projects/Other/fulcro-rad-demo/" 0 33 (ivy-index 2)) #("mes" 0 3 (ivy-index 0)) "*Messages*" #("modus-themes" 0 12 (ivy-index 0)) #("kv-rad:49525" 0 12 (ivy-index 0 idx 0)) #("address_forms.cljc" 0 18 (ivy-index 2)) #("pricing_plan_form.cljc" 0 22 (ivy-index 1)) #("mana" 0 4 (ivy-index 0)) "invoice_forms.cljc" #("cljs" 0 4 (ivy-index 0)) "*cider-repl Other/kv-rad:localhost:49525#6(cljs:custom)*" #("_" 0 1 (ivy-index 1)) #("*cider-repl Other/kv-rad:localhost:49525#6(clj)*" 0 25 (ivy-index 2) 25 34 (idx 0 ivy-index 2) 34 48 (ivy-index 2)) "*cider-repl Other/kv-rad:localhost:49525#6(cljs:custom)*" #("model.cljc" 0 10 (ivy-index 2)) #("parser.clj" 0 10 (ivy-index 2)) #("par" 0 3 (ivy-index 0)) "src/demo-project/com/example/components/parser.clj" #("add" 0 3 (ivy-index 0)) "address.cljc" #("ini" 0 3 (ivy-index 0)) #(".cljs" 0 5 (ivy-index 0)) "operator.cljs" #("clojure-mode-extra-font-locking" 0 31 (ivy-index 0)) #("clojure-mode-extra-font-locking-20210322.704" 0 44 (ivy-index 1)) #("operator/e" 0 10 (ivy-index 0)) #("oper" 0 4 (ivy-index 1)) "*cider-repl Other/kv-rad:localhost:49525(clj)*" "*cider-repl Knowbie/Admin:localhost:49690(clj)*" #("operator.cljs" 0 13 (ivy-index 2)) #("account.cljc" 0 12 (ivy-index 3 face ivy-virtual)) #("o" 0 1 (ivy-index 0)) "address.cljc" "*cider-repl Other/kv-rad:localhost:53397#2(cljs:custom)*" #("kv-rad:53397" 0 12 (idx 0 ivy-index 0)) #("com.fulcrologic.rad.form_options.cljc" 0 37 (ivy-index 1)) #("accou" 0 5 (ivy-index 1)) "account_forms.cljc" #("repl" 0 4 (ivy-index 1)) "*cider-repl Other/fulcro-rad-demo:localhost:53261(clj)*" #("clojure.core.clj" 0 16 (ivy-index 5)) #("kv-rad:51604" 0 12 (idx 0 ivy-index 0)) #("*Customize Group: Modus Themes*" 0 31 (ivy-index 1)) #("modus-theme-faces" 0 17 (ivy-index 1)) #("lisp-extra-font-lock" 0 20 (ivy-index 1)) #("core.clj" 0 8 (face ivy-virtual ivy-index 4)) #("core" 0 4 (ivy-index 0)) #("user.clj" 0 8 (ivy-index 1)) #("*Customize Apropos*" 0 19 (ivy-index 1)) "*cider-repl Other/kv-rad:localhost:49489(cljs:custom)*" #("defaults.edn" 0 12 (ivy-index 1)) "*cider-repl Other/kv-rad:localhost:49489(clj)*" #("defa" 0 4 (ivy-index 0))))
(setq counsel-M-x-history '(#("^project reg" 0 12 (ivy-index 0)) "project-find-regexp" #("^project-" 0 9 (ivy-index 11)) "project-switch-project" #("^custo" 0 6 (ivy-index 0)) "customize-group" #("^lsp-re" 0 7 (ivy-index 0)) "lsp-restart-workspace" #("^lsp" 0 4 (ivy-index 1)) "lsp" #("^" 0 1 (ivy-index 0)) "auto-highlight-symbol-mode" #("auto-h" 0 6 (ivy-index 1)) "auto-highlight-symbol-mode" "lsp-restart-workspace" #("^ci" 0 3 (ivy-index 0)) "cider-jack-in-clj&cljs" "cider-jack-in-clj&cljs" #("^cid" 0 4 (ivy-index 0)) "cider-jack-in-clj&cljs" #("^rename" 0 7 (ivy-index 0)) "rename-file" #("^cider-jack" 0 11 (ivy-index 2)) "cider-jack-in-clj&cljs" "flycheck-mode" #("^flych" 0 6 (ivy-index 1)) "flycheck-mode" #("^cust" 0 5 (ivy-index 2)) "customize-group" #("^rain" 0 5 (ivy-index 0)) "rainbow-delimiters-mode" "rainbow-delimiters-mode" "cider-connect-clj&cljs" #("^lsp-fo" 0 7 (ivy-index 0)) "lsp-format-buffer" #("lsp-" 0 4 (ivy-index 4)) "lsp-find-definition" "lsp" "lsp-disconnect" "cider-connect-clj&cljs" #("^ren" 0 4 (ivy-index 0)) "rename-file" "rename-file" #("^cider-" 0 7 (ivy-index 0)) "cider-connect-clj&cljs" #("^cider-con" 0 10 (ivy-index 2)) "cider-connect-clj&cljs" #("^cider-co" 0 9 (ivy-index 2)) "cider-connect-clj" "lsp" #("^cus" 0 4 (ivy-index 2)) "customize-group" #("^clojurec" 0 9 (ivy-index 0)) "clojurec-mode" #("^cloj" 0 5 (ivy-index 1)) "clojure-mode" #("^package" 0 8 (ivy-index 1)) "package-install" "clojurec-mode" #("^clojur" 0 7 (ivy-index 0)) "clojurec-mode" #("^package-de" 0 11 (ivy-index 0)) "package-delete" #("^cider-c" 0 8 (ivy-index 1)) "cider-connect-clj&cljs" "smartparens-mode" #("^sma" 0 4 (ivy-index 0)) "smartparens-mode" "rainbow-delimiters-mode" "customize-group" "cider-connect-cljs" "lsp" #("^cide" 0 5 (ivy-index 0)) "cider-jack-in-clj&cljs" #("^cider-jac" 0 10 (ivy-index 0)) "cider-jack-in-clj&cljs" #("^cider-ja" 0 9 (ivy-index 0)) "cider-jack-in-clj&cljs" #("switch-bu" 0 9 (ivy-index 1)) "ido-switch-buffer" #("^counsel-swi" 0 12 (ivy-index 0)) "counsel-switch-buffer" #("lsp" 0 3 (ivy-index 1)) "cider-jack-in-clj&cljs" #("^anz" 0 4 (ivy-index 0)) "anzu-isearch-query-replace" "anzu-isearch-query-replace" #("^anzu que" 0 9 (ivy-index 5)) "anzu-query-replace-at-cursor-thing" "anzu-query-replace-at-cursor" #("cljr" 0 4 (ivy-index 0)) "cljr-rename-symbol" "lsp-rename" "lsp-disconnect" "lsp-rename" #("^cljr-ren" 0 9 (ivy-index 1)) "cljr-rename-symbol" #("^pa" 0 3 (ivy-index 0)) "package-install" "clj-refactor-mode" #("^clj-" 0 5 (ivy-index 0))))
(setq tablist-named-filter 'nil)
